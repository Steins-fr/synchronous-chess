name: Angular CI Pull request Game App

on:
    pull_request:
        paths:
            - "application/frontend/game-app/**"

defaults:
    run:
        working-directory: application/frontend/game-app

jobs:
    angular-lint:
        if: github.event.pull_request.draft == false
        timeout-minutes: 5
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Get npm cache directory
              id: npm-cache-dir
              shell: bash
              run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

            - uses: actions/cache@v4
              with:
                  path: |
                      ${{ steps.npm-cache-dir.outputs.dir }}
                      **/node_modules
                  key: ${{ runner.os }}-npm-${{ hashFiles('application/frontend/game-app/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-

            - name: Install dependencies
              run: npm ci

            - name: Run Angular lint
              run: npm run lint

    angular-test-karma:
        runs-on: ubuntu-latest
        needs: [angular-lint]
        steps:
            - uses: actions/checkout@v4
              with:
                  # Disabling shallow clones is recommended for improving the relevancy of reporting
                  fetch-depth: 0

            - uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Get npm cache directory
              id: npm-cache-dir
              shell: bash
              run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

            - uses: actions/cache@v4
              with:
                  path: |
                      ${{ steps.npm-cache-dir.outputs.dir }}
                      **/node_modules
                  key: ${{ runner.os }}-npm-${{ hashFiles('application/frontend/game-app/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-

            - name: Install dependencies
              run: npm ci

            - name: Run Test
              run: npm run test:ci

            # Fix "Could not resolve 85 file paths in [/home/runner/work/synchronous-chess/synchronous-chess/application/frontend/game-app/coverage/lcov.info]"
            # First unresolved path: dist/test-out/20250816T145544923Z-17187c64/src/app/app.routes.ts
            - name: Fix "Could not resolve 85 file paths in lcov.info"
              run: |
                  sed -i 's|SF:dist/test-out/[^/]*/|SF:|g' coverage/lcov.info

            - name: SonarQube Scan
              uses: SonarSource/sonarqube-scan-action@v5 # Ex: See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              with:
                  projectBaseDir: application/frontend/game-app
                  args: >
                      -Dsonar.typescript.tsconfigPath=tsconfig.json
                      -Dsonar.sources=src/app
                      -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts
                      -Dsonar.tests=src/app
                      -Dsonar.test.inclusions=**/*.spec.ts
                      -Dsonar.sourceEncoding=UTF-8
                      -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info
